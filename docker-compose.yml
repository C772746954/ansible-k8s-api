version: '3.8'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: k8s-operator-api
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./app:/app/app
      - ./ansible/playbooks:/app/ansible/playbooks
    networks:
      - k8s-operator-net
    depends_on:
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile.celery
    container_name: k8s-celery-worker
    env_file:
      - .env
    volumes:
      - ./app:/app/app
      - ./ansible/playbooks:/app/ansible/playbooks
    networks:
      - k8s-operator-net
    depends_on:
      - redis
      - api
    command: ["celery", "-A", "app.celery.tasks", "worker", "--loglevel=info", "--concurrency=4"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  redis:
    image: redis:7.2-alpine
    container_name: k8s-operator-redis
    ports:
      - "6379:6379"
    networks:
      - k8s-operator-net
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: ["redis-server", "--requirepass $$REDIS_PASSWORD"]
    env_file:
      - .env
    environment:
      - REDIS_PASSWORD=${CELERY_BROKER_PASSWORD}

networks:
  k8s-operator-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

volumes:
  redis_data:
    driver: local